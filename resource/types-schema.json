{
    "id": "https://raw.githubusercontent.com/wraith13/evil-type.ts/master/resource/types-schema.json#",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "oneOf": [
        {
            "$ref": "#/definitions/Root"
        }
    ],
    "definitions": {
        "Arch": {
            "type": "object",
            "oneOf": [
                {
                    "$ref": "#/definitions/PathValue"
                },
                {
                    "$ref": "#/definitions/JsonValue"
                },
                {
                    "$ref": "#/definitions/CallValue"
                },
                {
                    "$ref": "#/definitions/ResourceValue"
                },
                {
                    "$ref": "#/definitions/Type"
                }
            ]
        },
        "JsonObject": {
            "type": "object",
            "properties": {
                "$arch": false
            },
            "additionalProperties": true
        },
        "JsonArray": {
            "type": "array",
            "items":
            {
                "$ref": "#/definitions/Json"
            }
        },
        "Json": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "type": "boolean"
                },
                {
                    "type": "integer"
                },
                {
                    "type": "number"
                },
                {
                    "type": "string"
                },
                {
                    "$ref": "#/definitions/JsonArray"
                },
                {
                    "$ref": "#/definitions/JsonObject"
                }
            ]
        },
        "Type": {
            "oneOf": [
                {
                    "$ref": "#/definitions/SystemType"
                },
                {
                    "$ref": "#/definitions/ValueType"
                },
                {
                    "$ref": "#/definitions/ArrayType"
                },
                {
                    "$ref": "#/definitions/TupleType"
                },
                {
                    "$ref": "#/definitions/ObjectType"
                },
                {
                    "$ref": "#/definitions/CompositeType"
                },
                {
                    "$ref": "#/definitions/TemplateType"
                },
                {
                    "$ref": "#/definitions/MetaType"
                }
            ]
        },
        "SystemType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "never", "unknown", "any", "null" ]
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "ValueType": {
            "oneOf": [
                {
                    "$ref": "#/definitions/NullType"
                },
                {
                    "$ref": "#/definitions/BooleanType"
                },
                {
                    "$ref": "#/definitions/NumberType"
                },
                {
                    "$ref": "#/definitions/StringType"
                }
            ]
        },
        "NullType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "null" ]
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "BooleanType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "boolean" ]
                },
                "enum":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "boolean"
                    }
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "NumberType": {
            "oneOf": [
                {
                    "$ref": "#/definitions/RegularNumberType"
                },
                {
                    "$ref": "#/definitions/EnumNumberType"
                }
            ]
        },
        "RegularNumberType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "number" ]
                },
                "integerOnly":
                {
                    "type": "boolean"
                },
                "minValue":
                {
                    "type": "number"
                },
                "maxValue":
                {
                    "type": "number"
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "EnumNumberType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "number" ]
                },
                "enum":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "number"
                    }
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "StringType": {
            "oneOf": [
                {
                    "$ref": "#/definitions/RegularStringType"
                },
                {
                    "$ref": "#/definitions/EnumStringType"
                }
            ]
        },
        "RegularStringType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "string" ]
                },
                "minLength":
                {
                    "type": "number"
                },
                "maxLength":
                {
                    "type": "number"
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "EnumStringType": {
            "type": "object",
            "properties": {
                "$arch":
                {
                    "type": "string",
                    "enum": [ "type" ]
                },
                "type":
                {
                    "type": "string",
                    "enum": [ "string" ]
                },
                "enum":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "optional":
                {
                    "type": "boolean"
                }
            },
            "required": [
                "$arch",
                "type"
            ]
        },
        "Namespace":
        {
            "type": "object",
            "properties": {
                "type":
                {
                    "type": "string",
                    "enum": [ "namespace" ]
                },
                "name":
                {
                    "type": "string"
                },
                "types":
                {
                    "type": "array",
                    "items":
                    {
                        "$ref": "#/definitions/Type"
                    }
                },
                "namespaces":
                {
                    "type": "array",
                    "items":
                    {
                        "$ref": "#/definitions/Namespace"
                    }
                }
            },
            "required": [
                "type",
                "name"
            ]
        },
        "Root":
        {
            "type": "object",
            "properties": {
                "types":
                {
                    "type": "array",
                    "items":
                    {
                        "$ref": "#/definitions/Type"
                    }
                },
                "namespaces":
                {
                    "type": "array",
                    "items":
                    {
                        "$ref": "#/definitions/Namespace"
                    }
                },
                "options":
                {
                    "$ref": "#/definitions/Options"
                }
            }
        }
    }
}
